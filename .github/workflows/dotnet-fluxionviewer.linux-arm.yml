name: FluxionViewer Linux ARM

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.100

      - name: Set-up cross-compiling AArch64
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          echo Package List
          ls -l /etc/apt/sources.list.d/
          echo Sources
          cat /etc/apt/sources.list
          sudo apt update
          sudo apt install clang llvm zlib1g-dev:arm64 zlib1g-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu -y

      - name: Build for ARM64
        run: |
            export OBJCOPY=aarch64-linux-gnu-objcopy
            dotnet publish -c Release -r linux-arm64 -p:LinkerFlavor=lld -p:ObjCopyName=$OBJCOPY -o ./publish/linux-arm64/ ./src/FluxionViewer.Linux/FluxionViewer.Linux.csproj
            rm ./publish/linux-arm64/*.dbg
            
      - name: Upload Artifact (Linux ARM64)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer Linux ARM64
          path: ./publish/linux-arm64/
