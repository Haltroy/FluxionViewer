name: FluxionViewer Linux x64
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set-up some packages for packaging
        run: |
          sudo apt update
          sudo apt install alien -y
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore ./src/FluxionViewer.Linux/FluxionViewer.Linux.csproj
      - name: Build
        run: dotnet build --no-restore ./src/FluxionViewer.Linux/FluxionViewer.Linux.csproj
      # Linux x64
      - name: Publish (Linux x64)
        run: |
          dotnet publish -c Release -r linux-x64 -o ./publish/linux-x64/ ./src/FluxionViewer.Linux/FluxionViewer.Linux.csproj
          rm ./publish/linux-x64/*.dbg
          tar czf ./publish/fluxionviewer-linux-x64.tar.gz ./publish/linux-x64/
      - name: Upload Artifact (Linux x64)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer-Linux-x64
          path: ./publish/fluxionviewer-linux-x64.tar.gz
      # Debian x64
      - name: Debian Package x64
        run: ./linux/debian/build-x64.sh ./publish/linux-x64/
      - name: Upload Artifact (Debian x64)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer-amd64-Debian
          path: ./linux/debian/fluxionviewer.amd64.deb
      # RPM x64 (convert with Alien)
      - name: RPM conversion x64
        run: sudo $(which alien) -r ./linux/debian/*.deb
      - name: Upload Artifact (RPM x64)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer-amd64-RPM
          path: ./*.rpm
      # Linux MUSL x64
      - name: Publish (Linux MUSL x64)
        run: |
          dotnet publish -c Release -r linux-musl-x64 -o ./publish/linux-musl-x64/ ./src/FluxionViewer.Linux/FluxionViewer.Linux.csproj
          rm ./publish/linux-musl-x64/*.dbg
          tar czf ./publish/fluxionviewer-linux-musl-x64.tar.gz ./publish/linux-musl-x64/
      - name: Upload Artifact (Linux MUSL x64)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer-Linux-MUSL-x64
          path: ./publish/fluxionviewer-linux-musl-x64.tar.gz
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Build APK in Alpine Container
        run: |
          docker run --rm -v $(pwd):/build -w /build alpine:latest sh -c "
          apk add --no-cache alpine-sdk tar bash sudo &&
          export APKBUILD_SUDO=sudo &&
          adduser -G abuild -D builder &&
          echo 'builder ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers &&
          chown -R builder:abuild /build/linux/alpine/x64 &&
          chmod -R u+w /build/linux/alpine/x64 &&
          su builder -c 'abuild-keygen -ain'
          su builder -c '
          cd ./linux/alpine/x64 &&
          abuild checksum &&
          abuild -r
          cd ../musl-x64 &&
          abuild checksum &&
          abuild -r'"
      - name: Upload Artifact (Alpine packages)
        uses: actions/upload-artifact@v4
        with:
          name: FluxionViewer-Linux-Alpine
          path: ./linux/alpine/*/*.apk
